{"version":3,"sources":["components/Card/index.jsx","components/Panel/index.jsx","components/Button/index.jsx","components/AddForm/index.jsx","components/containers/Panels.js","actions/panels.js","actions/cards.js","App.js","index.js","components/reducers/panels.js","components/reducers/index.js","components/store.js"],"names":["Card","card","Paper","elevation","className","Panel","title","cards","isNewPanel","onAddPanel","onAddCard","panelIndex","Typography","variant","map","index","key","Button","onAdd","inputState","color","disableElevation","onClick","AddForm","useState","showForm","setShowForm","setInputState","inputRef","useRef","useEffect","current","focus","InputBase","fullWidth","multiline","placeholder","onChange","e","target","value","IconButton","connect","items","panels","addPanel","name","type","payload","addCard","text","item","App","Component","initialState","combineReducers","state","action","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.abaffb69.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport \"./Card.css\";\r\n\r\nconst Card = ({ card }) => {\r\n  return (\r\n    <Paper elevation={3} className=\"card\">\r\n      {card}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { Card, AddForm } from \"../../components\";\r\n\r\nimport \"./Panel.css\";\r\n\r\nconst Panel = ({\r\n  title,\r\n  cards,\r\n  isNewPanel,\r\n  onAddPanel,\r\n  onAddCard,\r\n  panelIndex\r\n}) => {\r\n  return (\r\n    <div className=\"panel\">\r\n      {title && (\r\n        <Typography variant=\"h6\" className=\"panel__title\">\r\n          {title}\r\n        </Typography>\r\n      )}\r\n      {cards && (\r\n        <div className=\"panel__items\">\r\n          {cards.map((card, index) => {\r\n            return <Card key={index} card={card} />;\r\n          })}\r\n        </div>\r\n      )}\r\n\r\n      <AddForm\r\n        isNewPanel={isNewPanel}\r\n        onAddPanel={onAddPanel}\r\n        onAddCard={onAddCard}\r\n        panelIndex={panelIndex}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Panel;\r\n","import React from \"react\";\r\nimport \"./Button.css\";\r\nimport { Button as ButtonUI } from \"@material-ui/core\";\r\n\r\nconst Button = ({ isNewPanel, inputState, onAdd }) => {\r\n  return (\r\n    <ButtonUI\r\n      className=\"button\"\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      disableElevation\r\n      onClick={() => onAdd()}\r\n    >\r\n      {isNewPanel ? \"Добавить колонку\" : \"Добавить карточку\"}\r\n    </ButtonUI>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { Fragment, useState, useRef, useEffect } from \"react\";\r\nimport AddOutlinedIcon from \"@material-ui/icons/AddOutlined\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nimport \"./AddForm.css\";\r\nimport { Button } from \"../\";\r\nimport { InputBase, Paper, IconButton } from \"@material-ui/core\";\r\n\r\nconst AddForm = ({ isNewPanel, onAddPanel, onAddCard, panelIndex }) => {\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [inputState, setInputState] = useState(\"\");\r\n  const inputRef = useRef(null);\r\n\r\n  const onAdd = () => {\r\n    if (inputState) {\r\n      if (isNewPanel) {\r\n        onAddPanel(inputState);\r\n      } else {\r\n        onAddCard(panelIndex, inputState);\r\n      }\r\n      setInputState(\"\");\r\n      setShowForm(!showForm);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (inputRef.current) inputRef.current.focus();\r\n  }, [showForm]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {showForm ? (\r\n        <div className=\"add-form\">\r\n          <div className=\"add-form-input\">\r\n            <Paper className=\"input-wrap\">\r\n              <InputBase\r\n                fullWidth\r\n                multiline\r\n                placeholder={\r\n                  isNewPanel\r\n                    ? \"Введите название колонки\"\r\n                    : \"Введите название карточки\"\r\n                }\r\n                inputRef={inputRef}\r\n                onChange={e => setInputState(e.target.value)}\r\n                value={inputState}\r\n              />\r\n            </Paper>\r\n            <div className=\"button-wrap\">\r\n              <Button\r\n                isNewPanel={isNewPanel}\r\n                inputState={inputState}\r\n                onAdd={onAdd}\r\n              />\r\n              <IconButton\r\n                onClick={() => {\r\n                  setShowForm(!showForm);\r\n                }}\r\n              >\r\n                <CloseOutlinedIcon />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          className=\"panel__bottom-add-btn\"\r\n          onClick={() => {\r\n            setShowForm(!showForm);\r\n          }}\r\n        >\r\n          <AddOutlinedIcon />\r\n          <span>\r\n            {isNewPanel\r\n              ? \"Добавить еще одну колонку\"\r\n              : \"Добавить еще одну карточку\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddForm;\r\n","import React, { Fragment } from \"react\";\r\nimport { Panel } from \"../../components\";\r\nimport { connect } from \"react-redux\";\r\nimport panelsActions from \"../../actions/panels\";\r\nimport cardsActions from \"../../actions/cards\";\r\n\r\nconst Panels = ({ items, addPanel, addCard }) => (\r\n  <Fragment>\r\n    {items.map((item, index) => (\r\n      <Panel\r\n        key={index}\r\n        panelIndex={index}\r\n        onAddPanel={addPanel}\r\n        onAddCard={addCard}\r\n        {...item}\r\n      />\r\n    ))}\r\n    <Panel isNewPanel onAddPanel={addPanel} onAddCard={addCard} />\r\n  </Fragment>\r\n);\r\n\r\nexport default connect(({ panels }) => ({ items: panels }), {\r\n  ...panelsActions,\r\n  ...cardsActions\r\n})(Panels);\r\n","export default {\r\n  addPanel: name => ({\r\n    type: \"PANEL:ADD\",\r\n    payload: name\r\n  })\r\n};\r\n","export default {\r\n  addCard: (panelIndex, text) => ({\r\n    type: \"CARDS:ADD\",\r\n    payload: {\r\n      panelIndex,\r\n      text\r\n    }\r\n  })\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Panels } from \"./components/containers\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Panels />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./components/store\";\n\nconst render = Component =>\n  ReactDOM.render(\n    <Provider store={store}>\n      <Component />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n\nrender(App);\n\nif (module.hot) {\n  module.hot.accept(\"./App\", () => {\n    const NextApp = require(\"./App\").default;\n    render(NextApp);\n  });\n}\n","const initialState = [\r\n  {\r\n    title: \"План на месяц\",\r\n    cards: [\r\n      \"Пройти курс по React\",\r\n      \"Отметить день рождения\",\r\n      \"Записаться на курсы английского языка, чтобы уехать жить в Лондон\",\r\n      \"Пройти курс по React\",\r\n      \"Отметить день рождения\",\r\n\r\n      \"Записаться на курсы английского языка, чтобы уехать жить в Лондон\"\r\n    ]\r\n  },\r\n  {\r\n    title: \"План на день\",\r\n    cards: [\r\n      \"Записаться на курс по React\",\r\n      \"Забронировать тир на субботу\",\r\n      \"Накидать тем для статей в блог\",\r\n      \"Сделать колонку Итоги\"\r\n    ]\r\n  }\r\n];\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CARDS:ADD\":\r\n      return state.map((item, index) => {\r\n        if (action.payload.panelIndex === index) {\r\n          if (item.cards) {\r\n            return {\r\n              ...item,\r\n              cards: [...item.cards, action.payload.text]\r\n            };\r\n          }\r\n        }\r\n        return item;\r\n      });\r\n\r\n    case \"PANEL:ADD\":\r\n      return [...state, { title: action.payload, cards: [] }];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport panels from \"./panels\";\r\n\r\nexport default combineReducers({\r\n  panels\r\n});\r\n","import { createStore } from \"redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n"],"sourceRoot":""}